# This config was automatically generated from your source code
# Stacks detected: deps:python:.
version: 2.1
orbs:
  python: circleci/python@2
  discord: antonioned/discord@0.1.0
  bridgecrew: bridgecrew/bridgecrew@1.0.5

jobs:
  build:
    working_directory: ~/app
    docker:
      - image: cimg/base:2022.09
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
#    executor: python
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKERHUB_USERNAME/weathertest:$TAG .
            docker tag $DOCKERHUB_USERNAME/weathertest:$TAG registry.gitlab.com/devops1771522/weathertest:$TAG
            docker build -t registry.gitlab.com/devops1771522/weather:$TAG .

      - run:
          name: Reachability Test
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker run -d -p5000:5000 --name app $DOCKERHUB_USERNAME/weathertest:$TAG
            docker exec app python test.py
      - run:
          name: Push application Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo "$TOKEN" | docker login registry.gitlab.com -u sbidarski --password-stdin
            docker push registry.gitlab.com/devops1771522/weather:$TAG
            docker push registry.gitlab.com/devops1771522/weather:latest

      - discord/status:
          fail_only: false
          failure_message: "**${CIRCLE_USERNAME}**'s build: **${CIRCLE_JOB}** failed."
          success_message: "**${CIRCLE_USERNAME}** deployed api to prod."
          webhook: "${DISCORD_STATUS_WEBHOOK}"


  checkov_tests:
    executor: bridgecrew/default
    steps:
      - checkout
      - bridgecrew/scan:
          api-key-variable: BC_API_KEY
          directory: ./terraform_files
          output: json
          soft-fail: true

workflows:
  my-workflow:
    jobs:
      - build
      - checkov_tests



#
#      - checkov/scan:
#          directory: "~/app"                            # tell checkov where is the directory you want to scan
#          soft-fail: true                                     # do not fail the workflow in case vulnerabilities have found
#          output: "cli"                                       # Report output format one of cli, json, junitxml
#          api-key: "6bridgecrew-9example-2api-key1-demo9"     # use bridgecrew api key to create violations in bridgecrew app