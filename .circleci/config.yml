version: 2.1
orbs:
  python: circleci/python@2
  discord: antonioned/discord@0.1.0
  bridgecrew: bridgecrew/bridgecrew@1.0.5
  terraform: circleci/terraform@3.0.0

workflows:
  version: 2
  build:
    jobs:
      - build
      - checkov_tests
  test:
    jobs:
      terratest:
        requires:
          -build


jobs:
  build:
    working_directory: ~/app
    docker:
      - image: cimg/base:2022.09
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKERHUB_USERNAME/weathertest:$TAG .
            docker tag $DOCKERHUB_USERNAME/weathertest:$TAG registry.gitlab.com/devops1771522/weathertest:$TAG
            docker build -t registry.gitlab.com/devops1771522/weather:$TAG .

      - run:
          name: Reachability Test
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker run -d -p5000:5000 --name app $DOCKERHUB_USERNAME/weathertest:$TAG
            docker exec app python test.py
      - run:
          name: Push application Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo "$TOKEN" | docker login registry.gitlab.com -u sbidarski --password-stdin
            docker push registry.gitlab.com/devops1771522/weather:$TAG
            docker push registry.gitlab.com/devops1771522/weather:latest

      - discord/status:
          fail_only: false
          failure_message: "**${CIRCLE_USERNAME}**'s build: **${CIRCLE_JOB}** failed."
          success_message: "**${CIRCLE_USERNAME}** deployed api to prod."
          webhook: "${DISCORD_STATUS_WEBHOOK}"


  checkov_tests:
    executor: bridgecrew/default
    steps:
      - checkout
      - bridgecrew/scan:
          api-key-variable: BC_API_KEY
          directory : ./terraform
          output: json
          soft-fail: true


  terratest:
    docker:
      # specify the version
      - image: circleci/golang:1.14
    working_directory: /go/src/terratest_poc
    steps:
      - checkout
      - terraform/install:
          arch: amd64
          os: linux
          terraform_version: 0.14.2
      - run: cd go/src/terratest_poc
      #- run: go get -v -d -t
      - run: go test -v -timeout 30m 
